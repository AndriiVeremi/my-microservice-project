pipeline {
  agent {
    kubernetes {
      yaml """
apiVersion: v1
kind: Pod
metadata:
  labels:
    some-label: jenkins-kaniko
spec:
  serviceAccountName: jenkins-sa
  containers:
    - name: kaniko
      image: gcr.io/kaniko-project/executor:v1.16.0-debug
      imagePullPolicy: Always
      command: ["sleep"]
      args: ["99d"]
    - name: git
      image: alpine/git
      command: ["sleep"]
      args: ["99d"]
"""
    }
  }

  environment {
    ECR_REGISTRY = "$(terraform output -raw ecr_repo_url)"
    IMAGE_NAME   = "django-app"
    IMAGE_TAG    = "v1.0.${BUILD_NUMBER}"
    COMMIT_EMAIL = "jenkins@localhost"
    COMMIT_NAME  = "jenkins"
  }

  stages {
    stage('Build & Push Docker Image') {
      steps {
        container('kaniko') {
          sh '''
            /kaniko/executor \
              --context `pwd` \
              --dockerfile `pwd`/Dockerfile \
              --destination=$ECR_REGISTRY/$IMAGE_NAME:$IMAGE_TAG \
              --cache=true \
              --skip-tls-verify
          '''
        }
      }
    }

    stage('Update Helm Chart Tag') {
      steps {
        container('git') {
          withCredentials([usernamePassword(credentialsId: 'github-token',
                                           usernameVariable: 'GIT_USER',
                                           passwordVariable: 'GIT_TOKEN')]) {
            sh '''
              git clone https://$GIT_USER:$GIT_TOKEN@github.com/YOUR_USERNAME/goit-devops.git
              cd goit-devops/charts/django-app
              sed -i "s|repository: .*|repository: $ECR_REGISTRY/$IMAGE_NAME|" values.yaml
              sed -i "s|tag: .*|tag: $IMAGE_TAG|"         values.yaml
              git config user.email "$COMMIT_EMAIL"
              git config user.name  "$COMMIT_NAME"
              git add values.yaml
              git commit -m "chore: bump image to $IMAGE_TAG"
              git push origin main
            '''
          }
        }
      }
    }
  }
}